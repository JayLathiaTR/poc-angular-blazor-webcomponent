@page "/weather"

<p>This component demonstrates the data in the tablular grid</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override Task OnInitializedAsync()
    {
        forecasts = new WeatherForecast[]
        {
            new WeatherForecast {Date = new DateOnly(2022, 01, 06), Summary = "Freezing", TemperatureC = 1},
            new WeatherForecast {Date = new DateOnly(2022, 01, 07), Summary = "Bracing", TemperatureC = 14},
            new WeatherForecast {Date = new DateOnly(2022, 01, 08), Summary = "Freezing", TemperatureC = -13},
            new WeatherForecast {Date = new DateOnly(2022, 01, 09), Summary = "Balmy", TemperatureC = -16},
            new WeatherForecast {Date = new DateOnly(2022, 01, 10), Summary = "Chilly", TemperatureC = -2},
        };

        return Task.CompletedTask;
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}